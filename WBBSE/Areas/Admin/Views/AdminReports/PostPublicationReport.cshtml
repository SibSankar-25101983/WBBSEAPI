@using Common;
@model ViewModel.VMReporting

@{
    ViewBag.Title = "WBBSE Admin :: Post Publication Report";
    Layout = "~/Areas/Admin/Views/Shared/_LayoutAdmin.cshtml";
}

@section htmlhead
{
    <link href="~/vendor/jqueryUI/jquery-ui.css" rel="stylesheet" />
}




@section pageheader
{
    <h1 class="h3 font-weight-bold text-info text-uppercase mb-1 pb-2">
        Post Publication Report
    </h1>
    <hr class="pb-2" />
}

@section info
{
    <div id="divE" class="alert alert-danger alert-dismissible" style="display:@ViewData[ViewDataNames.ErrorVisibility]">
        <button type="button" class="close" data-dismiss="alert">&times;</button>
        <ul style="list-style-type: none;">
            <li>
                @Html.Raw(ViewData[ViewDataNames.SaveInfo])
            </li>
        </ul>
    </div>
}

@if (ViewData[ViewDataNames.ReportYN] == "visible")
{
    using (Html.BeginForm("PostPublicationReport", "AdminReports", FormMethod.Post))
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true)
        <section id="reporting" class="my-5">
            <div class="container border shadow p-4">
                <div class="alert alert-warning mb-4" role="alert">
                    <strong>Note:</strong> If no Fileter is Applied, All Available Data will be Downloaded.
                </div>
                <div class="alert alert-danger alert-dismissible" id="AlertInfo">
                    <button type="button" class="close" onclick="this.parentElement.style.display='none';">&times;</button>
                    <strong><span id="AlertInfoMsg"></span></strong>
                </div>
                <div class="row">
                    <div class="col-md-2 text-lg-right mb-2">
                        From Date
                    </div>
                    <div class="col-md-10 mb-2">
                        @Html.TextBoxFor(m => m.FromDate, new { @class = "form-control", @placeholder = "Select From Date", @id = "txtFromDate", @maxlength = 10, @oninput = "javascript: if (this.value.length > this.maxLength) this.value = this.value.slice(0, this.maxLength);" })
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-2 text-lg-right mb-2">
                        To Date
                    </div>
                    <div class="col-md-10 mb-2">
                        @Html.TextBoxFor(m => m.ToDate, new { @class = "form-control", @placeholder = "Select To Date", @id = "txtToDate", @maxlength = 10, @oninput = "javascript: if (this.value.length > this.maxLength) this.value = this.value.slice(0, this.maxLength);" })
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-2 text-lg-right mb-2">
                        Scrutiny Type
                    </div>
                    <div class="col-md-10 mb-2">
                        @Html.DropDownListFor(m => m.Param1, Enumerable.Empty<SelectListItem>(), new { @class = "form-control", @id = "ddlScrutinyType" })
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-2 text-lg-right mb-2">
                        Report Format
                    </div>
                    <div class="col-md-10 mb-2">
                        <div class="form-check-inline">
                            <label class="form-check-label" for="radio1">
                                <input type="radio" class="form-check-input" id="radio1" name="ReportType" value="1" checked>Excel
                            </label>
                        </div>
                        @*<div class="form-check-inline">
                                <label class="form-check-label" for="radio2">
                                    <input type="radio" class="form-check-input" id="radio2" name="ReportType" value="2">Pdf
                                </label>
                            </div>*@
                    </div>
                </div>
                <div class="row my-3">
                    <div class="col-md-2 mb-2"></div>
                    <div class="col-md-10 mb-2">
                        @*@Html.HiddenFor(m => m.CookieValue, new { @id = "cookieValue" })*@
                        <button type="submit" id="btnReport" class="btn btn-outline-primary">Download Report</button>
                    </div>
                </div>
            </div>
        </section>
    }
}
else
{
    <section class="my-5">
        <div class="container">
            <div class="alert alert-danger">
                @Html.Raw(Message.UnauthorizedAccess)
            </div>
        </div>
    </section>
}
@section scripts
{
    <script src="~/js/loadingoverlay.min.js"></script>
    <script src="~/vendor/jqueryUI/jquery-ui.js"></script>
    <script type="text/javascript">
        //var t;
        function GetScrutinyType() {
            $("#ddlScrutinyType").empty();
            $("#ddlScrutinyType").append(new Option("All", DefaultSetting.DefaultValEnc));
            try {
                $.ajax({
                    url: "/AdminPostPublicationApplication/GetScrutinyType",
                    type: "GET",
                    dataType: "json",
                    contentType: "application/json",
                    async: true,
                    success: function (data) {
                        $(data).each(function (index, item) {
                            var opt = new Option(item.ScrutinyType, item.ScrutinyTypeId);
                            $("#ddlScrutinyType").append(opt);
                        });
                    },
                    error: function (error) {
                        console.log(error.responseText);
                    }
                });
            }
            catch (err) {
                console.log(err.message);
            }
        }
        function Validate() {
            try {
                if ($.trim($("#txtFromDate").val()) != DefaultSetting.EmptyVal) {
                    if (!chkDataFormat(RegexType.Date, $.trim($("#txtFromDate").val()))) {
                        $('#AlertInfo').show();
                        $('#AlertInfoMsg').text(PostPublication.Validation.InvalidFromDate);
                        $(window).scrollTop($("#content").offset().top);
                        return false;
                    }
                }
                if ($.trim($("#txtToDate").val()) != DefaultSetting.EmptyVal) {
                    if (!chkDataFormat(RegexType.Date, $.trim($("#txtToDate").val()))) {
                        $('#AlertInfo').show();
                        $('#AlertInfoMsg').text(PostPublication.Validation.InvalidToDate);
                        $(window).scrollTop($("#content").offset().top);
                        return false;
                    }
                }
                //$("#cookieValue").val(Date.now().toString());
                //t = window.setInterval(function () {
                //    var s = 'dlc=' + $('#cookieValue').val();
                //    if (document.cookie.indexOf(s) !== -1) {
                //        console.log("here");
                //        HideLoaderNew();
                //        EnableButtons();
                //    }
                //}, 100);
                var x = confirm(Msg_Confirm());
                //if (x) {
                //    ShowLoaderNew();
                //}
                return x;
            }
            catch (err) {
                console.log(err);
                alert(OperationError());
                return false;
            }
        }
        window.onbeforeunload = DisableButtons;
        $(document).ready(function () {
            GetScrutinyType();
            $("#txtFromDate").datepicker({ dateFormat: "dd-mm-yy", changeMonth: true, changeYear: false, yearRange: "-00:+00" });
            $("#txtToDate").datepicker({ dateFormat: "dd-mm-yy", changeMonth: true, changeYear: false, yearRange: "-00:+00" });
            $("#AlertInfo").css('display', 'none');
            $("#btnReport").on('click', Validate);

            //anchor active
            var activeLink = "@ViewData[ViewDataNames.ActiveLinkA]";
            var currentA = document.getElementById(activeLink);
            currentA.classList.add("active");
            //anchor div
            var activeDIV = currentA.parentElement.parentElement.id;
            var currentDIV = document.getElementById(activeDIV);
            currentDIV.classList.add("show");
            //anchor li
            var activeLI = currentA.parentElement.parentElement.parentElement.id;
            var currentLI = document.getElementById(activeLI);
            currentLI.classList.add("active");
        });
    </script>
}
