@model ViewModel.VMMstUser
@using Common;

@{
    ViewBag.Title = "WBBSE Admin :: Users";
    Layout = "~/Areas/Admin/Views/Shared/_LayoutAdmin.cshtml";
}

@section htmlhead
{
    <link href="~/css/select2.min.css" rel="stylesheet" />
}

@section pageheader
{
    <h1 class="h3 font-weight-bold text-info text-uppercase mb-1 pb-2">User Management
    </h1>
    <hr class="pb-2" />
}

@section info
{
    <div id="divE" class="alert alert-danger alert-dismissible" style="display:@ViewData[ViewDataNames.ErrorVisibility]">
        <button type="button" class="close" data-dismiss="alert">&times;</button>
        <ul style="list-style-type: none;">
            <li>
                @Html.ValidationMessageFor(m => m.UserId)
            </li>
            <li>
                @Html.ValidationMessageFor(m => m.FirstName)
            </li>
            <li>
                @Html.ValidationMessageFor(m => m.LastName)
            </li>
            <li>
                @Html.ValidationMessageFor(m => m.DesignationId)
            </li>
            <li>
                @ViewData[ViewDataNames.SaveInfo]
            </li>
        </ul>
    </div>
    <div id="divS" class="alert alert-success alert-dismissible" style="display:@ViewData[ViewDataNames.SucessVisibility]">
        <button type="button" class="close" data-dismiss="alert">&times;</button>
        <ul style="list-style-type: none;">
            <li>
                @ViewData[ViewDataNames.SaveInfo]
            </li>
        </ul>
    </div>
}

@section header
{
    <div class="row pb-2">
        <div class="col-md-5">
            <div class="input-group">
                <input type="text" id="txtSearch" class="form-control alpha" placeholder="Search by User Name">
                <div class="input-group-append">
                    <button type="button" id="btnSearch" class="btn btn-primary">Search</button>
                </div>
            </div>
        </div>
        <div class="col-md-7">
            @if (ViewData[ViewDataNames.AddYN] == "visible")
            {
                <div class="btn-group float-right">
                    <button type="button" id="btnAdd" class="btn btn-outline-secondary" accesskey="A">Add New</button>
                </div>
            }
        </div>
    </div>
}

<!--Loader-->
<div id="preloader">
    <div id="loader"></div>
</div>

<div class="table-responsive">
    <table id="GridUser" class="gj-grid table table-light table-bordered table-striped"></table>
</div>

@*Main Modal*@
<div class="modal fade" id="popupModal" tabindex="-1" role="dialog" aria-hidden="true" data-keyboard="false" data-backdrop="static">
    <div class="modal-dialog modal-lg modal-width-75">
        <div id="divModalContent" class="modal-content">
            <div class="modal-header bg-primary text-light">
                <h4 class="modal-title" id="myModalLabel"><span id="lblModalHeader"></span></h4>
                <button type="button" class="close text-light" data-dismiss="modal">&times;</button>
            </div>
            @using (Html.BeginForm("Users", "AdminUser", FormMethod.Post))
            {
                @Html.AntiForgeryToken()
                @Html.ValidationSummary(true)
                <div class="modal-body" id="divPopupBody">
                    <div class="alert alert-danger alert-dismissible" id="AlertInfo">
                        <button type="button" class="close" data-dismiss="alert">&times;</button>
                        <strong><span id="AlertInfoMsg"></span></strong>
                    </div>
                    <div class="row mb-2">
                        <div class="col-sm-12">
                            <span class="font-weight-bold">Name</span><span style="color: red"> *</span>
                        </div>
                    </div>
                    <div class="row mb-4">
                        <div class="col-sm-2">
                            @Html.DropDownListFor(m => m.SalutationId, Enumerable.Empty<SelectListItem>(), new { @class = "form-control", @id = "ddlSalutation" })
                        </div>
                        <div class="col-sm-4">
                            @Html.TextBoxFor(m => m.FirstName, new { @class = "form-control OnlyAlpha", @placeholder = "First Name *", @id = "txtFirstName", @maxlength = 200, @oninput = "javascript: if (this.value.length > this.maxLength) this.value = this.value.slice(0, this.maxLength);" })
                        </div>
                        <div class="col-sm-3">
                            @Html.TextBoxFor(m => m.MiddleName, new { @class = "form-control OnlyAlpha", @placeholder = "Middle Name", @id = "txtMiddleName", @maxlength = 200, @oninput = "javascript: if (this.value.length > this.maxLength) this.value = this.value.slice(0, this.maxLength);" })
                        </div>
                        <div class="col-sm-3">
                            @Html.TextBoxFor(m => m.LastName, new { @class = "form-control OnlyAlpha", @placeholder = "Last Name *", @id = "txtLastName", @maxlength = 200, @oninput = "javascript: if (this.value.length > this.maxLength) this.value = this.value.slice(0, this.maxLength);" })
                        </div>
                    </div>
                    <div class="row mb-2">
                        <div class="col-sm-12">
                            <span class="font-weight-bold">Contact Details</span>
                        </div>
                    </div>
                    <div class="row mb-4">
                        <div class="col-sm-6">
                            @Html.TextBoxFor(m => m.EmailId, new { @class = "form-control allowCharForEmailId", @placeholder = "Email Id", @id = "txtEmailId", @maxlength = 100, @oninput = "javascript: if (this.value.length > this.maxLength) this.value = this.value.slice(0, this.maxLength);" })
                        </div>
                        <div class="col-sm-6">
                            @Html.TextBoxFor(m => m.MobileNo, new { @class = "form-control checkContactNo", @placeholder = "Mobile No", @id = "txtMobileNo", @maxlength = 10, @oninput = "javascript: if (this.value.length > this.maxLength) this.value = this.value.slice(0, this.maxLength);" })
                        </div>
                    </div>
                    <div class="row mb-2">
                        <div class="col-sm-12">
                            <span class="font-weight-bold">Address</span>
                        </div>
                    </div>
                    <div class="row mb-2">
                        <div class="col-sm-6">
                            @Html.TextBoxFor(m => m.AddressLine1, new { @class = "form-control alpha", @placeholder = "Address Line 1", @id = "txtAddressLine1", @maxlength = 200, @oninput = "javascript: if (this.value.length > this.maxLength) this.value = this.value.slice(0, this.maxLength);" })
                        </div>
                        <div class="col-sm-6">
                            @Html.TextBoxFor(m => m.AddressLine2, new { @class = "form-control alpha", @placeholder = "Address Line 2", @id = "txtAddressLine2", @maxlength = 200, @oninput = "javascript: if (this.value.length > this.maxLength) this.value = this.value.slice(0, this.maxLength);" })
                        </div>
                    </div>
                    <div class="row mb-4">
                        <div class="col-sm-6">
                            @Html.TextBoxFor(m => m.City, new { @class = "form-control alpha", @placeholder = "City", @id = "txtCity", @maxlength = 100, @oninput = "javascript: if (this.value.length > this.maxLength) this.value = this.value.slice(0, this.maxLength);" })
                        </div>
                        <div class="col-sm-6">
                            @Html.TextBoxFor(m => m.PinCode, new { @class = "form-control checkContactNo", @placeholder = "Pin Code", @id = "txtPinCode", @maxlength = 6, @oninput = "javascript: if (this.value.length > this.maxLength) this.value = this.value.slice(0, this.maxLength);" })
                        </div>
                    </div>
                    <div class="row mb-2">
                        <div class="col-sm-12">
                            <span class="font-weight-bold">User Type Information (Type of User/User Group/<span id="lblUserTypeName"></span> Name)</span>
                        </div>
                    </div>
                    <div class="row mb-4">
                        <div class="col-sm-3">
                            @Html.TextBoxFor(m => m.UserType, new { @class = "form-control alpha", @placeholder = "Type Of User", @id = "txtUserType" })
                        </div>
                        <div class="col-sm-3">
                            @Html.TextBoxFor(m => m.GroupName, new { @class = "form-control alpha", @placeholder = "User Group", @id = "txtGroupName" })
                        </div>
                        <div class="col-sm-6">
                            @Html.TextBoxFor(m => m.UserTypeName, new { @class = "form-control alpha", @placeholder = "Name", @id = "txtUserTypeName" })
                        </div>
                    </div>
                    <div class="row mb-2">
                        <div class="col-sm-12">
                            <span class="font-weight-bold">Designation</span>
                        </div>
                    </div>
                    <div class="row mb-4">
                        <div class="col-sm-12">
                            @Html.DropDownListFor(m => m.DesignationId, Enumerable.Empty<SelectListItem>(), new { @class = "js-example-responsive", @style = "width:100%;", @id = "ddlDesignation" })
                        </div>
                    </div>
                    <div class="row mb-4">
                        <div class="col-sm-1">
                            <span class="font-weight-bold">Is Active</span>
                        </div>
                        <div class="col-sm-11">
                            <input type="checkbox" id="chkActiveYN" name="ActiveYN" class="checkbox-custom" />
                            @*@Html.CheckBox("ActiveYN", new { @class = "checkbox-custom", @id = "chkActiveYN" })*@
                        </div>
                    </div>

                    @Html.HiddenFor(m => m.EntType, new { @id = "e" })
                    @Html.HiddenFor(m => m.UserId, new { @id = "U" })
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                    <button type="submit" id="btnSave" class="btn btn-primary">Save</button>
                </div>
            }
        </div>
    </div>
</div>

<!-- View Modal -->
<div class="modal fade" id="popupModalView" tabindex="-1" role="dialog" aria-hidden="true" data-keyboard="false" data-backdrop="static">
    <div class="modal-dialog modal-lg modal-width-75">
        <div id="divModalContentView" class="modal-content">
            <div class="modal-header bg-primary text-light">
                <h4 class="modal-title">School Data :: View Record</h4>
                <button type="button" class="close text-light" data-dismiss="modal" onclick="ClearViewData()">&times;</button>
            </div>
            <div class="modal-body" id="divPopupBodyView">
                <table class="table table-bordered table-striped table-hover">
                    <tbody id="tblViewData"></tbody>
                </table>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal" onclick="ClearViewData()">Close</button>
            </div>
        </div>
    </div>
</div>

@section scripts
{
    <script src="~/js/select2.min.js"></script>
    <script src="~/Areas/Admin/js/user.js?v=@DateTime.Now.ToFileTime().ToString()"></script>
    <script type="text/javascript">
        var grid;
        $(document).ready(function () {
            DisableButtons();
            ShowLoader();
            var onSuccessFunc = function (response) {
                grid.render(response);
                $("#GridUser").on('DOMSubtreeModified', chkMod);
                HideLoader();
                EnableButtons();
            };

            grid = $("#GridUser").grid({
                dataKey: "UserId",
                uiLibrary: "fontawesome",
                iconsLibrary: 'fontawesome',
                dataSource: { url: "../../AdminUser/GetUserList", success: onSuccessFunc },
                columns: [
                    @Html.Raw(@ViewData[ViewDataNames.GridColumns])
                ],
                pager: { enable: true, limit: 10, sizes: [10, 25, 50, 100] }
            });
            grid.on('pageChanging', function (e, newPage) {
                $("#GridUser").off('DOMSubtreeModified');
            });

            //anchor active
            var activeLink = "@ViewData[ViewDataNames.ActiveLinkA]";
            var currentA = document.getElementById(activeLink);
            currentA.classList.add("active");
            //anchor div
            var activeDIV = currentA.parentElement.parentElement.id;
            var currentDIV = document.getElementById(activeDIV);
            currentDIV.classList.add("show");
            //anchor li
            var activeLI = currentA.parentElement.parentElement.parentElement.id;
            var currentLI = document.getElementById(activeLI);
            currentLI.classList.add("active");
        });
    </script>
}
