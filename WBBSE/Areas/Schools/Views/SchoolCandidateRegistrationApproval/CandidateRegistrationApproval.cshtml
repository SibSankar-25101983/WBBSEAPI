@using Common;
@model ViewModel.VMCandidateRegistration

@{
    ViewBag.Title = "CandidateRegistrationApproval";
    Layout = "~/Areas/Schools/Views/Shared/_LayoutSchool.cshtml";
}

@section pageheader
{
    <h1 class="h3 font-weight-bold text-info text-uppercase mb-1 pb-2">Candidate Registration Approval
    </h1>
    <hr class="pb-2" />
}

@section info
{
    <div id="divS" class="alert alert-success alert-dismissible" style="display:@ViewData[ViewDataNames.SucessVisibility]">
        <button type="button" class="close" data-dismiss="alert">&times;</button>
        <ul style="list-style-type: none;">
            <li>
                @ViewData[ViewDataNames.SaveInfo]
            </li>
        </ul>
    </div>
}
@section header
{
    <div class="row pb-2">
        <div class="col-md-5">
            <div class="input-group">
                <input type="text" id="txtSearch" class="form-control" placeholder="Search..">
                <div class="input-group-append">
                    <button type="button" id="btnSearch" class="btn btn-primary">Search</button>
                </div>
            </div>
        </div>
    </div>
}

<!--Loader-->
<div id="preloader">
    <div id="loader"></div>
</div>

<table id="gridCandidateRegistration" class="gj-grid table table-light table-bordered table-striped" data-source="@Url.Action("StudentRegistrationList")"></table>

<!-- View Modal -->
<div class="modal fade" id="popupModalView" tabindex="-1" role="dialog" aria-hidden="true" data-keyboard="false" data-backdrop="static">
    <div class="modal-dialog modal-lg modal-width-75">
        <div id="divModalContentView" class="modal-content">
            <div class="modal-header bg-primary text-light">
                <h4 class="modal-title">Approval :: View</h4>
                <button type="button" class="close text-light" data-dismiss="modal">&times;</button>
            </div>
            @using (Html.BeginForm("CandidateRegistrationApproval", "SchoolCandidateRegistrationApproval", FormMethod.Post, new { enctype = "multipart/form-data" }))
            {
                @Html.AntiForgeryToken()
                @Html.ValidationSummary(true)
                <div class="modal-body text-center" id="divPopupBodyView">
                    <table class="table table-bordered table-striped table-hover">
                        <tbody id="tblViewData">
                        </tbody>
                    </table>
                </div>
                <div class="modal-footer">
                    <input type="submit" id="btnApprove" value="Approve Registration" class="btn btn-primary" />
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                </div>
                @Html.HiddenFor(m => m.StudentId, new { @id = "S" })
            }
        </div>
    </div>
</div>

@section scripts
{
    <script src="~/js/Message.js"></script>
    <script src="~/js/BasicFunctions.js"></script>
    <script type="text/javascript">

        function ClearViewData() {
            $("#tblViewData").empty();
        }

        function clearData() {
            $('#divPopupBody input').val('');
            $('#divPopupBody select').val('');
        }

        function Search() {

        }

        function View(e) {
            ClearViewData();

            try {
                var s = e.data.record.StudentId;

                $.ajax({
                    url: "/SchoolCandidateRegistrationApproval/GetStudentRegistrationApprovalView",
                    type: "GET",
                    dataType: "json",
                    data: { 's': '' + s + '' },
                    contentType: "application/json",
                    async: true,
                    success: function (data) {
                        $("#S").val(s);
                        $("#tblViewData").append(data.View);
                        $("#popupModalView").modal("show");
                    },
                    error: function (error) {
                        alert(OperationError());
                        console.log(error.responseText);
                    }
                });
            }
            catch (err) {
                alert(OperationError());
                console.log(err.message);
            }
        }

        function Save() {

            try {
                var x = confirm(StudentRegistration.Info.RegistrationApprovalFinalSubmit);
                if (x) {
                    $("#popupModal").modal("hide");
                    ShowLoader();
                }
                return x;
            }
            catch (err) {
                alert(OperationError());
                console.log(err.message);
                return false;
            }
        }

        function Remove() {
        }


        $(document).ready(function () {
            HideLoader();
            grid = $("#gridCandidateRegistration").grid({
                dataKey: "StudentId",
                uiLibrary: "fontawesome",
                columns: [
                    @Html.Raw(@ViewData[ViewDataNames.GridColumns])
                ],
                pager: { enable: true, limit: 5, sizes: [1, 5, 10, 25, 50] }
            });
            $("#btnSearch").on("click", Search);
            $("#btnApprove").on("click", Save);

            //anchor active
            var activeLink = "@ViewData[ViewDataNames.ActiveLinkA]";
            var currentA = document.getElementById(activeLink);
            currentA.classList.add("active");
            //anchor div
            var activeDIV = currentA.parentElement.parentElement.id;
            var currentDIV = document.getElementById(activeDIV);
            currentDIV.classList.add("show");
            //anchor li
            var activeLI = currentA.parentElement.parentElement.parentElement.id;
            var currentLI = document.getElementById(activeLI);
            currentLI.classList.add("active");
        });
    </script>
}

